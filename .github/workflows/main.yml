name: CI/CD
on:
  - push
jobs:
# add jobs here
  code-checks:
    name: Code Checks
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.10

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Create .env file
        run: |
          echo DATABASE_URL=${{ vars.DATABASE_URL }} > .env
      - run: mv .env.example .env
      - run: npm install --legacy-peer-deps
      # - run: npm run test
      - run: npm run lint
      - run: npm run format:check
      # - run: npm run types:check

# jobs:
  # previous jobs
  #start of a new job
  deploy:
    name: Deploy to Vercel with Prisma Migrations
    runs-on: ubuntu-latest
    needs: [code-checks] #[code-checks, e2e]
    if: github.repository_owner == 'devshittu'
    permissions:
      contents: read
      deployments: write
    environment: development
    steps:
      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ fromJSON('["Production", "Preview"]')
            [github.ref != 'refs/heads/master'] }}
      - uses: actions/checkout@v3
      - run: mv .env.example .env


      # Install dependencies and Prisma client
      - run: npm install --legacy-peer-deps
      - run: npx prisma generate
      
      # Apply Prisma migrations before deployment
      - name: Apply Prisma Migrations
        env:
          DATABASE_URL: ${{ vars.DATABASE_URL }}
        run: |
          npx prisma migrate deploy
          

      - uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: ${{ fromJSON('["--prod", ""]')
            [github.ref != 'refs/heads/master'] }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          # scope: ${{ secrets.VERCEL_ORG_ID}}
          working-directory: ./
      - name: update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.
            deployment_id }}

# .github/workflows/main.yml